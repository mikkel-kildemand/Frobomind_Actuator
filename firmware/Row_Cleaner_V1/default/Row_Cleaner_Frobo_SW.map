Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_mulsi3.o)
                              main.o (__mulsi3)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                              main.o (__udivmodhi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodsi4.o)
                              main.o (__udivmodsi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtcan128.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                              avr_serial.o (__do_clear_bss)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(atoi.o)
                              rcnmea.o (atoi)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(itoa.o)
                              rcnmea.o (itoa)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(mul10.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(atoi.o) (__mulhi_const_10)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(utoa.o)
                              rcnmea.o (utoa)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(strrev.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(itoa.o) (strrev)

Allocating common symbols
Common symbol       size              file

t1ms_cnt            0x2               main.o
act_state           0x1               main.o
pfbst_interval      0x2               main.o
height2             0x2               main.o
but1                0x1               main.o
Cnt3                0x2               main.o
led_state           0x1               main.o
nmea_ticks_l        0x4               main.o
ib_tail             0x2               avr_serial.o
led_signal          0x1               main.o
ib                  0x50              avr_serial.o
led_count           0x1               main.o
nmea_wd_timeout     0x2               main.o
t1ms                0x1               main.o
tx_busy             0x1               avr_serial.o
rx                  0xa0              rcnmea.o
state               0x1               main.o
dist                0x4               main.o
rx_ite              0x2               rcnmea.o
voltage             0x2               main.o
voltage_min         0x2               main.o
adc_ch              0x1               main.o
adc_ports           0x3               main.o
nmea_err            0x2               rcnmea.o
ib_head             0x2               avr_serial.o
nmea_ticks_r        0x4               main.o
tx                  0xa0              rcnmea.o
Cnt4                0x2               main.o
battery_low_warning
                    0x1               main.o
ob_tail             0x2               avr_serial.o
adc_data            0x6               main.o
next_act_state      0x1               main.o
height1             0x2               main.o
nmea_wd             0x2               main.o
ob                  0x50              avr_serial.o
act_reset           0x1               main.o
motion              0x2               main.o
actuator_param_received
                    0x1               main.o
ob_head             0x2               avr_serial.o
tx_len              0x2               rcnmea.o
rx_len              0x2               rcnmea.o
actuator_fault_warning
                    0x1               main.o
height              0x2               main.o
target              0x8               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtcan128.o
LOAD avr_serial.o
LOAD main.o
LOAD rcnmea.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x12e6
 *(.vectors)
 .vectors       0x00000000       0x94 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtcan128.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000094                . = ALIGN (0x2)
                0x00000094                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000094        0x0 linker stubs
 *(.trampolines*)
                0x00000094                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000094                __ctors_start = .
 *(.ctors)
                0x00000094                __ctors_end = .
                0x00000094                __dtors_start = .
 *(.dtors)
                0x00000094                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000094        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtcan128.o
                0x00000094                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000094        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtcan128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000a0       0x1a c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtcan128.o
                0x000000a0                __do_copy_data
 .init4         0x000000ba       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                0x000000ba                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000ca        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtcan128.o
 *(.init9)
 *(.text)
 .text          0x000000d2        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtcan128.o
                0x000000d2                __vector_22
                0x000000d2                __vector_28
                0x000000d2                __vector_1
                0x000000d2                __vector_24
                0x000000d2                __vector_12
                0x000000d2                __bad_interrupt
                0x000000d2                __vector_6
                0x000000d2                __vector_31
                0x000000d2                __vector_35
                0x000000d2                __vector_3
                0x000000d2                __vector_23
                0x000000d2                __vector_30
                0x000000d2                __vector_11
                0x000000d2                __vector_13
                0x000000d2                __vector_17
                0x000000d2                __vector_19
                0x000000d2                __vector_7
                0x000000d2                __vector_27
                0x000000d2                __vector_5
                0x000000d2                __vector_33
                0x000000d2                __vector_4
                0x000000d2                __vector_9
                0x000000d2                __vector_2
                0x000000d2                __vector_21
                0x000000d2                __vector_15
                0x000000d2                __vector_36
                0x000000d2                __vector_29
                0x000000d2                __vector_8
                0x000000d2                __vector_26
                0x000000d2                __vector_14
                0x000000d2                __vector_10
                0x000000d2                __vector_18
                0x000000d2                __vector_20
 .text          0x000000d6      0x2b6 avr_serial.o
                0x0000011a                __vector_32
                0x00000186                __vector_34
                0x0000037c                serial_rx_flush
                0x00000260                serial_tx
                0x000002bc                serial_tx_string
                0x0000020c                serial_tx_init
                0x00000326                serial_tx_idle
                0x0000034c                serial_rx
                0x000000d6                serial_init
                0x000002ac                serial_tx_direct
                0x0000032e                serial_rx_avail
 .text          0x0000038c      0xa1c main.o
                0x000008fe                button_init
                0x00000998                nmea_tx_status
                0x000008f4                button_update
                0x0000090a                state_update
                0x0000085a                voltage_update
                0x00000a2e                sched_update
                0x000003ca                __vector_25
                0x000008a0                led_update
                0x00000cec                main
                0x0000095a                save_reset_source
                0x00000b34                nmea_rx_parse
                0x00000464                actuator_controll
                0x00000818                adc_init
                0x000008e2                led_init
                0x00000458                actuator_init
                0x00000c42                nmea_init
                0x0000038c                sched_init
                0x000003a8                __vector_16
 .text          0x00000da8      0x3b6 rcnmea.o
                0x00001034                tx_inbuf
                0x00000da8                nmea_tx
                0x000010c6                nmea_rx_next_val
                0x00000ea0                nmea_tx_append_short
                0x00000ee2                nmea_rx_update
                0x000010a4                nmea_reset
                0x00000e5e                nmea_tx_append_ushort
 .text          0x0000115e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_mulsi3.o)
 .text          0x0000115e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
 .text          0x0000115e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodsi4.o)
 .text          0x0000115e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text          0x0000115e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .text          0x0000115e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(atoi.o)
 .text          0x0000115e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(itoa.o)
 .text          0x0000115e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(mul10.o)
 .text          0x0000115e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(utoa.o)
 .text          0x0000115e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(strrev.o)
                0x0000115e                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000115e       0x3e c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_mulsi3.o)
                0x0000115e                __mulsi3
 .text.libgcc   0x0000119c       0x28 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                0x0000119c                __udivmodhi4
 .text.libgcc   0x000011c4       0x44 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodsi4.o)
                0x000011c4                __udivmodsi4
 .text.libgcc   0x00001208        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text.libgcc   0x00001208        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00001208       0x3c c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(atoi.o)
                0x00001208                atoi
 .text.avr-libc
                0x00001244       0x42 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(itoa.o)
                0x00001244                itoa
 .text.avr-libc
                0x00001286       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(mul10.o)
                0x00001286                __mulhi_const_10
 .text.avr-libc
                0x00001296       0x2c c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(utoa.o)
                0x00001296                utoa
 .text.avr-libc
                0x000012c2       0x20 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(strrev.o)
                0x000012c2                strrev
                0x000012e2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000012e2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                0x000012e2                exit
                0x000012e2                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000012e2        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 *(.fini0)
                0x000012e6                _etext = .

.data           0x00800100        0x0 load address 0x000012e6
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtcan128.o
 .data          0x00800100        0x0 avr_serial.o
 .data          0x00800100        0x0 main.o
 .data          0x00800100        0x0 rcnmea.o
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_mulsi3.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodsi4.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(atoi.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(itoa.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(mul10.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(utoa.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(strrev.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100      0x234
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtcan128.o
 .bss           0x00800100        0x0 avr_serial.o
 .bss           0x00800100        0x1 main.o
 .bss           0x00800101        0x0 rcnmea.o
 .bss           0x00800101        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_mulsi3.o)
 .bss           0x00800101        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
 .bss           0x00800101        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodsi4.o)
 .bss           0x00800101        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .bss           0x00800101        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .bss           0x00800101        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(atoi.o)
 .bss           0x00800101        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(itoa.o)
 .bss           0x00800101        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(mul10.o)
 .bss           0x00800101        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(utoa.o)
 .bss           0x00800101        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(strrev.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800101       0xa9 avr_serial.o
                0x00800101                ib_tail
                0x00800103                ib
                0x00800153                tx_busy
                0x00800154                ib_head
                0x00800156                ob_tail
                0x00800158                ob
                0x008001a8                ob_head
 COMMON         0x008001aa       0x42 main.o
                0x008001aa                t1ms_cnt
                0x008001ac                act_state
                0x008001ad                pfbst_interval
                0x008001af                height2
                0x008001b1                but1
                0x008001b2                Cnt3
                0x008001b4                led_state
                0x008001b5                nmea_ticks_l
                0x008001b9                led_signal
                0x008001ba                led_count
                0x008001bb                nmea_wd_timeout
                0x008001bd                t1ms
                0x008001be                state
                0x008001bf                dist
                0x008001c3                voltage
                0x008001c5                voltage_min
                0x008001c7                adc_ch
                0x008001c8                adc_ports
                0x008001cb                nmea_ticks_r
                0x008001cf                Cnt4
                0x008001d1                battery_low_warning
                0x008001d2                adc_data
                0x008001d8                next_act_state
                0x008001d9                height1
                0x008001db                nmea_wd
                0x008001dd                act_reset
                0x008001de                motion
                0x008001e0                actuator_param_received
                0x008001e1                actuator_fault_warning
                0x008001e2                height
                0x008001e4                target
 COMMON         0x008001ec      0x148 rcnmea.o
                0x008001ec                rx
                0x0080028c                rx_ite
                0x0080028e                nmea_err
                0x00800290                tx
                0x00800330                tx_len
                0x00800332                rx_len
                0x00800334                PROVIDE (__bss_end, .)
                0x000012e6                __data_load_start = LOADADDR (.data)
                0x000012e6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800334        0x0
                0x00800334                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800334                PROVIDE (__noinit_end, .)
                0x00800334                _end = .
                0x00800334                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x60
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 avr_serial.o
 .debug_aranges
                0x00000020       0x20 main.o
 .debug_aranges
                0x00000040       0x20 rcnmea.o

.debug_pubnames
                0x00000000      0x4e9
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x120 avr_serial.o
 .debug_pubnames
                0x00000120      0x2f8 main.o
 .debug_pubnames
                0x00000418       0xd1 rcnmea.o

.debug_info     0x00000000      0xb14
 *(.debug_info)
 .debug_info    0x00000000      0x240 avr_serial.o
 .debug_info    0x00000240      0x5b4 main.o
 .debug_info    0x000007f4      0x320 rcnmea.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x3d9
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x108 avr_serial.o
 .debug_abbrev  0x00000108      0x17a main.o
 .debug_abbrev  0x00000282      0x157 rcnmea.o

.debug_line     0x00000000      0xe42
 *(.debug_line)
 .debug_line    0x00000000      0x2a3 avr_serial.o
 .debug_line    0x000002a3      0x82c main.o
 .debug_line    0x00000acf      0x373 rcnmea.o

.debug_frame    0x00000000      0x270
 *(.debug_frame)
 .debug_frame   0x00000000       0xc0 avr_serial.o
 .debug_frame   0x000000c0      0x130 main.o
 .debug_frame   0x000001f0       0x80 rcnmea.o

.debug_str      0x00000000      0x479
 *(.debug_str)
 .debug_str     0x00000000      0x15f avr_serial.o
                                0x198 (size before relaxing)
 .debug_str     0x0000015f      0x273 main.o
                                0x360 (size before relaxing)
 .debug_str     0x000003d2       0xa7 rcnmea.o
                                0x156 (size before relaxing)

.debug_loc      0x00000000      0x2fb
 *(.debug_loc)
 .debug_loc     0x00000000       0x92 avr_serial.o
 .debug_loc     0x00000092       0x3f main.o
 .debug_loc     0x000000d1      0x22a rcnmea.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Row_Cleaner_Frobo_SW.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x18
 .debug_ranges  0x00000000       0x18 rcnmea.o
